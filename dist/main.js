!function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";n.r(t);n(0);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var i=function e(t,n){var i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),s(this,"showSeriesList",(function(){i.view.showSeriesList(i.store.getLocalStorage())})),s(this,"handleAddSeries",(function(e){i.store.addSeries(e),i.view.showSeriesList(i.store.getLocalStorage())})),s(this,"handleRemoveSeries",(function(e){i.store.removeSeries(e),i.view.showSeriesList(i.store.getLocalStorage())})),s(this,"handleIncreaseSeasonCount",(function(e){i.store.increaseSeasonCount(e),i.view.showSeriesList(i.store.getLocalStorage())})),s(this,"handleDecreaseSeasonCount",(function(e){i.store.decreaseSeasonCount(e),i.view.showSeriesList(i.store.getLocalStorage())})),s(this,"handleIncreaseEpisodeCount",(function(e){i.store.increaseEpisodeCount(e),i.view.showSeriesList(i.store.getLocalStorage())})),s(this,"handleDecreaseEpisodeCount",(function(e){i.store.decreaseEpisodeCount(e),i.view.showSeriesList(i.store.getLocalStorage())})),this.store=t,this.view=n,this.view.showSeriesList(this.store.getLocalStorage()),this.view.addSeries(this.handleAddSeries),this.view.removeSeries(this.handleRemoveSeries),this.view.increaseSeasonCount(this.handleIncreaseSeasonCount),this.view.decreaseSeasonCount(this.handleDecreaseSeasonCount),this.view.increaseEpisodeCount(this.handleIncreaseEpisodeCount),this.view.decreaseEpisodeCount(this.handleDecreaseEpisodeCount)};function r(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}var o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var t=window.localStorage;this.getLocalStorage=function(){return JSON.parse(t.getItem("series")||"[]")},this.setLocalStorage=function(e){t.setItem("series",JSON.stringify(e))}}var t,n,s;return t=e,(n=[{key:"addSeries",value:function(e){var t=this.getLocalStorage();t.push({title:e,id:([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(function(e){return(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)})),seasonCount:0,episodeCount:0}),this.setLocalStorage(t)}},{key:"removeSeries",value:function(e){var t=this.getLocalStorage().filter((function(t){return t.id!==e}));this.setLocalStorage(t)}},{key:"increaseSeasonCount",value:function(e){var t=this.getLocalStorage();t.find((function(t){return t.id===e})).seasonCount+=1,this.setLocalStorage(t)}},{key:"decreaseSeasonCount",value:function(e){var t=this.getLocalStorage(),n=t.find((function(t){return t.id===e})).seasonCount;n<=0||(n-=1,t.find((function(t){return t.id===e})).seasonCount=n,this.setLocalStorage(t))}},{key:"increaseEpisodeCount",value:function(e){var t=this.getLocalStorage();t.find((function(t){return t.id===e})).episodeCount+=1,this.setLocalStorage(t)}},{key:"decreaseEpisodeCount",value:function(e){var t=this.getLocalStorage(),n=t.find((function(t){return t.id===e})).episodeCount;n<=0||(n-=1,t.find((function(t){return t.id===e})).episodeCount=n,this.setLocalStorage(t))}}])&&r(t.prototype,n),s&&r(t,s),e}();function a(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}var c=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,s;return t=e,s=[{key:"templateSeriesList",value:function(e){return e.length?e.reverse().reduce((function(e,t){return"".concat(e,'<li class="series__item" data-id=').concat(t.id,'>\n        <p class="js-series-name series__title">').concat((n=t.title,n.replace(/[&<]/g,(function(e){return"&"===e?"&amp;":"&lt;"}))),'</p>\n        <span class="js-series-delete series__delete-btn">\n        </span>\n\n        <div class="series__counter">\n        <button class="js-season-decrease series__btn">-</button>\n        <p>Season<span class="js-season-count series__count">').concat(t.seasonCount,'</span></p>\n        <button class="js-season-increase series__btn">+</button>\n        </div>\n\n        <div class="series__counter">\n        <button class="js-episode-decrease series__btn">-</button>\n        <p>Episode<span class="js-episode-count series__count">').concat(t.episodeCount,'</span></p>\n        <button class="js-episode-increase series__btn">+</button>\n        </div>\n      </li>');var n}),""):'<span class="series__empty">Enter series title to start tracking series</span>'}}],(n=null)&&a(t.prototype,n),s&&a(t,s),e}();function u(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}var l=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.$newSeries=document.querySelector(".js-new-series"),this.$seriesList=document.querySelector(".js-series-list")}var t,n,s;return t=e,(n=[{key:"showSeriesList",value:function(e){this.$seriesList.innerHTML=c.templateSeriesList(e)}},{key:"addSeries",value:function(e){this.$newSeries.addEventListener("submit",(function(t){t.preventDefault();var n=t.target.querySelector(".js-input").value.trim("");t.target.reset(),n&&e(n)}))}},{key:"removeSeries",value:function(e){this.$seriesList.addEventListener("click",(function(t){if(t.target.matches(".js-series-delete")){var n=t.target.parentNode.dataset.id;e(n)}}))}},{key:"increaseSeasonCount",value:function(e){this.$seriesList.addEventListener("click",(function(t){if(t.target.matches(".js-season-increase")){var n=t.target.parentNode.parentNode.dataset.id;e(n)}}))}},{key:"decreaseSeasonCount",value:function(e){this.$seriesList.addEventListener("click",(function(t){if(t.target.matches(".js-season-decrease")){var n=t.target.parentNode.parentNode.dataset.id;e(n)}}))}},{key:"increaseEpisodeCount",value:function(e){this.$seriesList.addEventListener("click",(function(t){if(t.target.matches(".js-episode-increase")){var n=t.target.parentNode.parentNode.dataset.id;e(n)}}))}},{key:"decreaseEpisodeCount",value:function(e){this.$seriesList.addEventListener("click",(function(t){if(t.target.matches(".js-episode-decrease")){var n=t.target.parentNode.parentNode.dataset.id;e(n)}}))}}])&&u(t.prototype,n),s&&u(t,s),e}(),d=function(){"serviceWorker"in navigator&&window.addEventListener("load",(function(){navigator.serviceWorker.register("/service-worker.js")}))};new i(new o("series"),new l).showSeriesList(),d()}]);
//# sourceMappingURL=main.js.map